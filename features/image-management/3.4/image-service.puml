@startuml image-service.png
!include ../../../lib/component.skin
skinparam ranksep 10
skinparam nodesep 10
scale 2000 width 
'left to right direction
frame "Import/Export Service (EC2)" as impexservice {
  interface "- ImportInstance\n- ImportVolume\n- DescribeConversionTasks\n- CancelConversionTask" as importops
  interface "- CreateInstanceExportTask\n- CancelExportTask\n- DescribeExportTasks" <<Future>>
}
frame "Classic EC2 Service" as EC2{
  interface "- RegisterImage" as ec2register
  interface "- BundleInstance" as ec2bundle
}
frame ObjectStorage {
    component "Input Bucket" as bucketin
    component "Output Bucket" as bucketout
}
frame NodeController {
  component BundleInstance as ncbundle
}
frame "Imaging Service" as imagingservice {
  interface "- ImportImage\n- ImportVolume\n- ValidateInstance\n- DescribeImagingTasks\n- CancelImagingTask" <<InternalOperation>> as imgserviceops
  component "Imaging Workflow Executor" as imgworkflowexec
  database "Local Work Cache" as imgcache 
  frame "Imaging Toolkit" as imgtoolkit {
    interface "- download/upload\n- bundle/unbundle\n- mount/unmount\n- convert\n- validate (image,instance)" as imgtoolkitops
  }
  imgtoolkitops -- imgcache
}
ncbundle -down-> bucketin
ncbundle -left-> imgserviceops
importops -right-> imgserviceops
ec2register -down-> imgserviceops
ec2bundle -down-> ncbundle
imgserviceops --> imgworkflowexec
imgworkflowexec --> imgtoolkitops
frame Database as taskstatedb {
  database "Conversion Task State"  as taskstate
}
imgworkflowexec --> taskstate
bucketin -left-> imgcache
imgcache -right-> bucketout

@enduml